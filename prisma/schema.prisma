// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  tokensBalance Int          @default(10) @map("tokens_balance")
  emailVerified DateTime?    @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  Purchase      Purchase[]
  Conversion    Conversion[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Purchase {
  id                Int      @id @default(autoincrement())
  user_id           String
  tokens            Int
  total_cost_usd    Decimal
  stripe_payment_id String?
  timestamp         DateTime @default(now())

  user User @relation(fields: [user_id], references: [id])
}

model Conversion {
  id              Int      @id @default(autoincrement())
  user_id         String
  document_name   String
  timestamp       DateTime @default(now())
  csv             String?
  success         Boolean
  tokens_cost     Int      @default(0)
  number_of_pages Int
  error_msg       String?
  user            User     @relation(fields: [user_id], references: [id])
}
